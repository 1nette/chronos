{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evie_\\\\Desktop\\\\chronos\\\\aboba\\\\src\\\\components\\\\Selects\\\\YearSelect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ArrowDown from '../Button/Arrows/ArrowDown';\nimport './YearSelectStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YearSelect = _ref => {\n  _s();\n  let {\n    nowYear,\n    selectYear\n  } = _ref;\n  const [currentYear, setCurrentYear] = useState();\n  const [yearsArray, setYearsArray] = useState([]);\n  const [isDropdownShown, setIsDropdownShown] = useState(false);\n  const myRef = useRef(null);\n  useEffect(() => {\n    let today = new Date();\n    let date = today.getFullYear();\n    setCurrentYear(date);\n    let array = [2000];\n    for (let i = 2001; i < currentYear + 6; i++) {\n      array.push(i);\n    }\n    setYearsArray(array);\n  }, [currentYear, nowYear]);\n  const showDropdown = event => {\n    if (isDropdownShown) setIsDropdownShown(false);else {\n      setIsDropdownShown(true);\n      myRef.current.scrollIntoView();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"year_select\",\n    onClick: showDropdown,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"year \", nowYear, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ArrowDown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isDropdownShown ? 'year_dropdown shown' : 'year_dropdown hidden',\n      children: yearsArray.map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Number(nowYear) === year ? 'year current' : 'year',\n        ref: Number(nowYear) === year ? myRef : null,\n        onClick: () => selectYear(year),\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(YearSelect, \"2+fsrMnoC4fPeDvEHPfrshRPQaY=\");\n_c = YearSelect;\nexport default YearSelect;\nvar _c;\n$RefreshReg$(_c, \"YearSelect\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ArrowDown","YearSelect","nowYear","selectYear","currentYear","setCurrentYear","yearsArray","setYearsArray","isDropdownShown","setIsDropdownShown","myRef","today","Date","date","getFullYear","array","i","push","showDropdown","event","current","scrollIntoView","map","year","Number"],"sources":["C:/Users/evie_/Desktop/chronos/aboba/src/components/Selects/YearSelect.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport ArrowDown from '../Button/Arrows/ArrowDown';\r\nimport './YearSelectStyle.css'\r\n\r\nconst YearSelect = ({ nowYear, selectYear }) => {\r\n    const [currentYear, setCurrentYear] = useState();\r\n    const [yearsArray, setYearsArray] = useState([]);\r\n    const [isDropdownShown, setIsDropdownShown] = useState(false);\r\n    const myRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let today = new Date();\r\n        let date = today.getFullYear();\r\n        setCurrentYear(date);\r\n\r\n        let array = [2000];\r\n        for (let i = 2001; i < (currentYear + 6); i++) {\r\n            array.push(i);\r\n        }\r\n        setYearsArray(array);\r\n    }, [currentYear, nowYear])\r\n\r\n    const showDropdown = event => {\r\n        if (isDropdownShown)\r\n            setIsDropdownShown(false);\r\n        else {\r\n            setIsDropdownShown(true);\r\n            myRef.current.scrollIntoView();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='year_select' onClick={showDropdown}>\r\n            <p>year {nowYear}  </p>\r\n            <ArrowDown />\r\n            <div className={isDropdownShown ? 'year_dropdown shown' : 'year_dropdown hidden'}>\r\n                {yearsArray.map(year =>\r\n                    <div className={Number(nowYear) === year ? 'year current' : 'year'} ref={Number(nowYear) === year ? myRef : null}\r\n                        key={year} onClick={() => selectYear(year)}>{year}</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default YearSelect"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAO,uBAAuB;AAAA;AAE9B,MAAMC,UAAU,GAAG,QAA6B;EAAA;EAAA,IAA5B;IAAEC,OAAO;IAAEC;EAAW,CAAC;EACvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,EAAE;EAChD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMa,KAAK,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACZ,IAAIa,KAAK,GAAG,IAAIC,IAAI,EAAE;IACtB,IAAIC,IAAI,GAAGF,KAAK,CAACG,WAAW,EAAE;IAC9BT,cAAc,CAACQ,IAAI,CAAC;IAEpB,IAAIE,KAAK,GAAG,CAAC,IAAI,CAAC;IAClB,KAAK,IAAIC,CAAC,GAAG,IAAI,EAAEA,CAAC,GAAIZ,WAAW,GAAG,CAAE,EAAEY,CAAC,EAAE,EAAE;MAC3CD,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC;IACjB;IACAT,aAAa,CAACQ,KAAK,CAAC;EACxB,CAAC,EAAE,CAACX,WAAW,EAAEF,OAAO,CAAC,CAAC;EAE1B,MAAMgB,YAAY,GAAGC,KAAK,IAAI;IAC1B,IAAIX,eAAe,EACfC,kBAAkB,CAAC,KAAK,CAAC,CAAC,KACzB;MACDA,kBAAkB,CAAC,IAAI,CAAC;MACxBC,KAAK,CAACU,OAAO,CAACC,cAAc,EAAE;IAClC;EACJ,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,aAAa;IAAC,OAAO,EAAEH,YAAa;IAAA,wBAC/C;MAAA,oBAAShB,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eACvB,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACb;MAAK,SAAS,EAAEM,eAAe,GAAG,qBAAqB,GAAG,sBAAuB;MAAA,UAC5EF,UAAU,CAACgB,GAAG,CAACC,IAAI,iBAChB;QAAK,SAAS,EAAEC,MAAM,CAACtB,OAAO,CAAC,KAAKqB,IAAI,GAAG,cAAc,GAAG,MAAO;QAAC,GAAG,EAAEC,MAAM,CAACtB,OAAO,CAAC,KAAKqB,IAAI,GAAGb,KAAK,GAAG,IAAK;QAClG,OAAO,EAAE,MAAMP,UAAU,CAACoB,IAAI,CAAE;QAAA,UAAEA;MAAI,GAA5CA,IAAI;QAAA;QAAA;QAAA;MAAA,QAA+C;IAC/D;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GAvCKtB,UAAU;AAAA,KAAVA,UAAU;AAwChB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}