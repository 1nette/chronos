{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evie_\\\\Desktop\\\\chronos\\\\aboba\\\\src\\\\components\\\\Sliders\\\\MonthSlider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ArrowLeft from '../Button/Arrows/ArrowLeft';\nimport ArrowRight from '../Button/Arrows/ArrowRight';\nimport './MonthSliderStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthSlider = _ref => {\n  _s();\n  let {\n    setClassSeason\n  } = _ref;\n  let date = new Date();\n  let result = date.getMonth();\n  const [index, setIndex] = useState(result);\n  const monthsArray = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\n  useEffect(() => {\n    switch (index) {\n      case 0:\n      case 1:\n      case 11:\n        setClassSeason('header_calendar_c winter');\n        break;\n      case 2:\n      case 3:\n      case 4:\n        setClassSeason('header_calendar_c spring');\n        break;\n      case 5:\n      case 6:\n      case 7:\n        setClassSeason('header_calendar_c summer');\n        break;\n      case 8:\n      case 9:\n      case 10:\n        setClassSeason('header_calendar_c fall');\n        break;\n      default:\n        break;\n    }\n  }, [setClassSeason, index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider_month\",\n    children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n      index: index,\n      setIndex: setIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"month_name\",\n      children: monthsArray[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {\n      index: index,\n      setIndex: setIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(MonthSlider, \"W/VnmYlUbG0cjPfovwgYhKb73k8=\");\n_c = MonthSlider;\nexport default MonthSlider;\nvar _c;\n$RefreshReg$(_c, \"MonthSlider\");","map":{"version":3,"names":["React","useState","useEffect","ArrowLeft","ArrowRight","MonthSlider","setClassSeason","date","Date","result","getMonth","index","setIndex","monthsArray"],"sources":["C:/Users/evie_/Desktop/chronos/aboba/src/components/Sliders/MonthSlider.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ArrowLeft from '../Button/Arrows/ArrowLeft';\r\nimport ArrowRight from '../Button/Arrows/ArrowRight';\r\nimport './MonthSliderStyle.css'\r\n\r\nconst MonthSlider = ({ setClassSeason }) => {\r\n    let date = new Date();\r\n    let result = date.getMonth();\r\n    const [index, setIndex] = useState(result);\r\n    const monthsArray = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\r\n\r\n    useEffect(() => {\r\n        switch (index) {\r\n            case 0: case 1: case 11:\r\n                setClassSeason('header_calendar_c winter');\r\n                break;\r\n\r\n            case 2: case 3: case 4:\r\n                setClassSeason('header_calendar_c spring');\r\n                break;\r\n\r\n            case 5: case 6: case 7:\r\n                setClassSeason('header_calendar_c summer');\r\n                break;\r\n\r\n            case 8: case 9: case 10:\r\n                setClassSeason('header_calendar_c fall');\r\n                break;\r\n\r\n            default: break;\r\n        }\r\n    }, [ setClassSeason, index])\r\n\r\n    return (\r\n        <div className='slider_month'>\r\n            <ArrowLeft index={index} setIndex={setIndex} />\r\n            <p className='month_name'>{monthsArray[index]}</p>\r\n            <ArrowRight index={index} setIndex={setIndex} />\r\n        </div>\r\n    )\r\n}\r\nexport default MonthSlider"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAO,wBAAwB;AAAA;AAE/B,MAAMC,WAAW,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC;EACnC,IAAIC,IAAI,GAAG,IAAIC,IAAI,EAAE;EACrB,IAAIC,MAAM,GAAGF,IAAI,CAACG,QAAQ,EAAE;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACQ,MAAM,CAAC;EAC1C,MAAMI,WAAW,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EAE9IX,SAAS,CAAC,MAAM;IACZ,QAAQS,KAAK;MACT,KAAK,CAAC;MAAE,KAAK,CAAC;MAAE,KAAK,EAAE;QACnBL,cAAc,CAAC,0BAA0B,CAAC;QAC1C;MAEJ,KAAK,CAAC;MAAE,KAAK,CAAC;MAAE,KAAK,CAAC;QAClBA,cAAc,CAAC,0BAA0B,CAAC;QAC1C;MAEJ,KAAK,CAAC;MAAE,KAAK,CAAC;MAAE,KAAK,CAAC;QAClBA,cAAc,CAAC,0BAA0B,CAAC;QAC1C;MAEJ,KAAK,CAAC;MAAE,KAAK,CAAC;MAAE,KAAK,EAAE;QACnBA,cAAc,CAAC,wBAAwB,CAAC;QACxC;MAEJ;QAAS;IAAM;EAEvB,CAAC,EAAE,CAAEA,cAAc,EAAEK,KAAK,CAAC,CAAC;EAE5B,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB,QAAC,SAAS;MAAC,KAAK,EAAEA,KAAM;MAAC,QAAQ,EAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/C;MAAG,SAAS,EAAC,YAAY;MAAA,UAAEC,WAAW,CAACF,KAAK;IAAC;MAAA;MAAA;MAAA;IAAA,QAAK,eAClD,QAAC,UAAU;MAAC,KAAK,EAAEA,KAAM;MAAC,QAAQ,EAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9C;AAEd,CAAC;AAAA,GAnCKP,WAAW;AAAA,KAAXA,WAAW;AAoCjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}